// Code generated by thriftgo (0.4.2). DO NOT EDIT.

package hello

import (
	"context"
	"fmt"
)

type HelloService interface {
	SayHello(ctx context.Context, name string) (r string, err error)
}

type HelloServiceSayHelloArgs struct {
	Name string `thrift:"name,1" frugal:"1,default,string" json:"name"`
}

func NewHelloServiceSayHelloArgs() *HelloServiceSayHelloArgs {
	return &HelloServiceSayHelloArgs{}
}

func (p *HelloServiceSayHelloArgs) InitDefault() {
}

func (p *HelloServiceSayHelloArgs) GetName() (v string) {
	return p.Name
}
func (p *HelloServiceSayHelloArgs) SetName(val string) {
	p.Name = val
}

func (p *HelloServiceSayHelloArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("HelloServiceSayHelloArgs(%+v)", *p)
}

var fieldIDToName_HelloServiceSayHelloArgs = map[int16]string{
	1: "name",
}

type HelloServiceSayHelloResult struct {
	Success *string `thrift:"success,0,optional" frugal:"0,optional,string" json:"success,omitempty"`
}

func NewHelloServiceSayHelloResult() *HelloServiceSayHelloResult {
	return &HelloServiceSayHelloResult{}
}

func (p *HelloServiceSayHelloResult) InitDefault() {
}

var HelloServiceSayHelloResult_Success_DEFAULT string

func (p *HelloServiceSayHelloResult) GetSuccess() (v string) {
	if !p.IsSetSuccess() {
		return HelloServiceSayHelloResult_Success_DEFAULT
	}
	return *p.Success
}
func (p *HelloServiceSayHelloResult) SetSuccess(x interface{}) {
	p.Success = x.(*string)
}

func (p *HelloServiceSayHelloResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *HelloServiceSayHelloResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("HelloServiceSayHelloResult(%+v)", *p)
}

var fieldIDToName_HelloServiceSayHelloResult = map[int16]string{
	0: "success",
}
